### Authentication ### 
POST auth/register   register a new user
REQUEST BODY
{
  userName*         string    user first name
  email*           string    email address
  password*         string    password must contain only alphabet
  confirmPassword*  string    confirm password must match a password
}
RESPONSE
201
  {
    accessToken     string    user token
    newUser         object    user object without password
  }
400 {message         string    client error message}
500 {message         string    server error message}



POST auth/login       login
REQUESY BODY 
{
      email*       string    email address
    password*       string    password must contain only alphabet
}
RESPONSE
200
  {
    accessToken     string    user token
    user            object    user object without password
  }
400
  {
    message         string    client error message
  }
500

  {
    message         string    server error message
  }

###################################################################################

## user ##

GET /user/:targetId       get all assets by targetId
REQUEST
HEADER
  AUTHORIZATION           Bearer [JWT]
RESPONSE
  200 
  {
    user      Object      include everything
  }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }


POST /user/wallet    connectwallet
HEADER 
AUTHORIZATION Bearer [JWT]
BODY
{
    walletAddress   string wallet address
}
RESPONSE
200 {
    wallet      String    walletaddress
    user        object    user object without password
}
401  { message: 'unauthenticated' }
500  { message: 'internal server errro' }



PATCH /user    Update profile
HEADER
  AUTHORIZATION           Bearer [JWT]
BODY
{
    user        Object      new userprofile
    
}
REPONSE
  200 
  {
    user            object
  }
  401 { message: 'unauthenticated' }
  405 { message: 'userName or Email is already in used'}
  500 { message: 'internal server error'}




###################################################################################


### collection  ###

POST /collection         created new collection
REQUEST
HEADER
  AUTHORIZATION           Bearer [JWT]
BODY
{
   name         String       text max 40 char
   description  string       longtext
   price        Decimal      number with 2 digit
   trait        array        array of traits object with key name {name : String}
}
RESPONSE
  200 
  { 
    collection  object       include array of traits
  }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }


Patch /:collectionId/image         form-data       postnew src and up date src
REQUEST
HEADER
  AUTHORIZATION           Bearer [JWT]
Form-Data
{
   image            path     file path
}
RESPONSE
  200 
  { 
    collection  object       include array of traits
  }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }






PATCH /collection/:collectionId/startmint         start mint event collection
HEADER
  AUTHORIZATION           Bearer [JWT]
REPONSE
  200 { message: 'mint event start'}
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }


PATCH /collection/:collectionId/mint          mintnft
HEADER
  AUTHORIZATION           Bearer [JWT]
REPONSE
  200 
  {
    nft       Object      object of nft include trait and triat atribute
  }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }



###################################################################################

### asset ###


POST asset/    create NFT
REQUEST
HEADER
  AUTHORIZATION           Bearer [JWT]
BODY
{
   collectionId           String         collection name
   name                   String         nft name
   TraitAttributes        array Object   TraitAttributes:[ {traitId: Number ||String  , name: String  } , { }]
}
RESPONSE
  200 { 
        nft         object 
        triats      array     object of traits
      }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }



POST asset/:assetId        put nft on sale list
HEADER
  AUTHORIZATION           Bearer [JWT]
BODY
{
   price            Decimal     number with  2 digit
}
REPONSE
  200 { message: 'sales success'}
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }


  PATCH asset/:assetId      update price nft
HEADER
  AUTHORIZATION           Bearer [JWT]
BODY
{
   new price    Decimal  number with  2digi
}
REPONSE
  200 { message: 'update success'}
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }


DELETE asset/:assetId       cancel nft from sale list
HEADER
  AUTHORIZATION           Bearer [JWT]
REPONSE
  200 { message: 'delete success'}
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error'}



POST asset/:assetId/buy      buy NFT from sale list
HEADER
  AUTHORIZATION           Bearer [JWT]
REPONSE
  200 { message: 'buy success'}
  401 { message: 'unauthenticated' }
  402 { message: 'not enough balance' }
  500 { message: 'internal server error'}








